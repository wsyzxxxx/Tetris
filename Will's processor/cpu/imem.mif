DEPTH = 4096;
WIDTH = 32;
ADDRESS_RADIX = DEC;
DATA_RADIX = BIN;
CONTENT
BEGIN
0000 : 00000000000000000000000000000000; -- nop # Basic Arithmetic Test with no Hazards

0001 : 00101010000000000000000000000001; -- addi $8 $0 1 # $8 = 1

0002 : 00000010000100000000111110010000; -- sll $8 $8 31 # $8 = -2147483648

0003 : 00101010010000000000000000000001; -- addi $9 $0 1 # $9 = 1

0004 : 00000010000100001001000000000100; -- sub $8 $8 $9 # overflow $30 = 3

0005 : 10110000000000000000000000000111; -- bex 7 # jump to 7

0006 : 00000000000000000000000000000000; -- nop

0007 : 10101000000000000000000000000000; -- setx 0 # $30 = 0

0008 : 00101010000100011111111111111111; -- addi $8 $8 -1 # overflow $30 = 2

0009 : 10110000000000000000000000001011; -- bex 11 # $jump to 11

0010 : 00000000000000000000000000000000; -- nop

0011 : 10101000000000000000000000000000; -- setx 0 # $30 = 0

0012 : 10110000000000000000000000001111; -- bex 15 # not jump

0013 : 00101010000000001111111111111111; -- addi $8 $0 65535 # $8 = 65535

0014 : 00000010010100000000011110010000; -- sll $9 $8 15 # $9 = 2147450880

0015 : 00101010000000000111111111111111; -- addi $8 $0 32767 # $8 = 32767

0016 : 00000010010100001001000000000000; -- add $9 $8 $9 # $9 = 2147483647

0017 : 00101010100000000000000000000001; -- addi $10 $0 1 # $10 = 1

0018 : 00000010010100101010000000000000; -- add $9 $9 $10 # overflow $30 = 1

0019 : 10110000000000000000000000010101; -- bex 21 # jump to 21

0020 : 00000000000000000000000000000000; -- nop

0021 : 10101000000000000000000000000000; -- setx 0 # $30 = 0

0022 : 00101010100000011111111111111111; -- addi $10 $0 -1 # $10 = -1

0023 : 00000010010100101010000000000100; -- sub $9 $9 $10 # overflow $30 = 3

0024 : 10110000000000000000000000011010; -- bex 26 # jump to 26

0025 : 00000000000000000000000000000000; -- nop

0026 : 10101000000000000000000000000000; -- setx 0 # $30 = 0

0027 : 10110000000000000000000000011110; -- bex 30 # not jump

0028 : 00101010000000000000000000001100; -- addi $8 $0 12 # $8 = 12

0029 : 00111010010100000000000000001111; -- sw $9 15($8) # save 2147483647 to 27

0030 : 00111010000100000000000000010001; -- sw $8 17($8) # save 12 to 29

0031 : 00101010000000001111111111111111; -- addi $8 $0 65535 # $8 = 65535

0032 : 00000010010100000000011110010000; -- sll $9 $8 15 # $9 = 2147450880

0033 : 00101010000000000111111111111111; -- addi $8 $0 32767 # $8 = 32767

0034 : 00000010010100001001000000000000; -- add $9 $8 $9 # $9 = 2147483647

0035 : 00000010100100001001000000001100; -- or $10 $8 $9 # $10 = 2147483647

0036 : 00010010100100100000000000000001; -- bne $10 $9 1 # not jump

0037 : 00000000000000000000000000000000; -- nop

0038 : 00101010000000000000000000001100; -- addi $8 $0 12 # $8 = 12

0039 : 01000010010100000000000000010001; -- lw $9 17($8) # $9 = 12

0040 : 01000010010100000000000000001111; -- lw $9 15($8) # $9 = 2147483647

0041 : 01000010010100000000000000010001; -- lw $9 17($8) # $9 = 12

0042 : 01000010010000000000000000000000; -- lw $9 0($0) # $9 = 0

0043 : 00110010000100100000000000000101; -- blt $8 $9 5 # not jump

0044 : 00110010010100000000000000000001; -- blt $9 $8 1 # jump to 46

0045 : 00000000000000000000000000000000; -- nop

0046 : 00110010000100000000000000000101; -- blt $8 $8 5 # not jump

0047 : 00000111101111011110000000000000; -- add $30 $30 $30 # $30 = 0

0048 : 00000000000100001000000000000000; -- add $0 $8 $8 # $0 = 0

0049 : 00000010000100001000000000000000; -- add $8 $8 $8 # $8 = 24

0050 : 00000000000000000000000000000000; -- nop	#PC = 50

0051 : 00101010000000000000000000000001; -- addi $8, $0, 1	#8: 1

0052 : 00101010010100000000000000000010; -- addi $9, $8, 2	#9: 3

0053 : 00101010100100111111111111111110; -- addi $10, $9, -2	#10: 1

0054 : 00000010010100001001000000000000; -- add $9, $8, $9	#9: 4

0055 : 00000010010100101000000000000100; -- sub $9, $9, $8	#9: 3

0056 : 00010010000100100000000000000001; -- bne $8, $9, 1	#PC+=2

0057 : 00101010110000000000000000000001; -- addi $11, $0, 1	#11: 0

0058 : 00010010000101000000000000000001; -- bne $8, $10, 1	#PC++

0059 : 00101011000000000000000000000001; -- addi $12, $0, 1	#12: 1

0060 : 00110010000100100000000000000001; -- blt $8, $9, 1	#PC+=2

0061 : 00000011000110001011000000000000; -- add $12, $12, $11	#12: 1

0062 : 00110010010100000000000000000001; -- blt $9, $8, 1	#PC+=1

0063 : 00000010110101101100000000000000; -- add $11, $11, $12	#11: 1

0064 : 00001000000000000000000001000010; -- j 66		#PC=66

0065 : 00000010110101100000000010010100; -- sra $11, $11, 1	#11: 2

0066 : 00011000000000000000000001010000; -- jal 80		#PC = 80, $31 = 67

0067 : 00010010000101000000000000000001; -- bne $8, $10, 1	#PC++

0068 : 00010010000100100000000000000001; -- bne $8, $9, 1	#PC+=2

0069 : 00110010010100000000000000000001; -- blt $9, $8, 1	#PC+=1

0070 : 00110010000101000000000000000001; -- blt $8, $10, 1	#PC+=1

0071 : 00110010000100100000000000000001; -- blt $8, $9, 1	#PC+=2

0072 : 00000010110101100000000010010100; -- sra $11, $11, 1	#11:2

0073 : 00001000000000000000000001001011; -- j 75		#PC=75

0074 : 00000010110101100000000010010100; -- sra $11, $11, 1	#11:2

0075 : 00011000000000000000000001010000; -- jal 80		#PC = 80, $31 = 76

0076 : 00001000000000000000000001000010; -- j 66		#PC = 66

0077 : 00000000000000000000000000000000; -- nop

0078 : 00000000000000000000000000000000; -- nop

0079 : 00000000000000000000000000000000; -- nop

0080 : 00000000000000000000000000000000; -- nop

0081 : 00100111110000000000000000000000; -- jr $31		#PC = 67 / 76
[0082..4095] : 00000000000000000000000000000000;
END;
